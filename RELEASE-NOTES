Electrum SV is a fork of the open source Electrum Bitcoin wallet (www.electrum.org) for Bitcoin SV.  The current
release is based on the Electrum 2.9.0 codebase with patches to

- handle Bitcoin SV difficulty adjustment algorithm
- sign transactions the Bitcoin SV way
- updated list of electrum servers
- updated icons and branding
- remove RBF (unsupported by Bitcoin SV network nodes)
- use different directory for wallets and configuration

The Electrum SV software is NOT affiliated, associated, or endorsed by Electrum, electrum.org or the Electrum
developers.

If you are concerned about running Electrum SV binaries we recommend installing and/or running it from the github
source directly.


Usage
-----

When you first run Electrum SV it will use a different configuration directory to Electrum.  On Unix it is
".electrum-sv", and on Windows/MacOS it is "ElectrumSV".  Your wallet files will be copied from the Electrum
cofiguration directory (".electrum" on unix, "Electrum" on Windows/MacOS), if found.  Initially transactions will show
up as unverified because Electrum SV is downloading the blockchain headers to verify the transactions.  This can take
up to 10 minutes, but is only done once.

Ensure you are running Electrum SV and not Electrum by checking for "Electrum SV" in the title bar wording.  Some
users installing from setup.py have reported conflicts if both Electrum and Electrum SV are installed in parallel
that way.

We STRONGLY recommend you get comfortable and only send a small amount of Bitcoin SV coins at first, to yourself,
to confirm the network is processing your transactions as expected.

Bitcoin SV hard forks after the 6th block with timestamp greater than 1 August 2017, 12:20 UTC has been mined.  The
seventh block must be greater than one million bytes in size.

The Bitcoin SV fork enforces a new signing scheme which is incompatible with the legacy chain.  Electrum SV only
signs transactions using this scheme, so its transactions are only valid on the Bitcoin SV hard fork after the fork
has occurred.

If you want to send Bitcoin before the fork, or Segwitcoins after the fork, you should continue to use the standard
Electrum client, Electrum SV will not work.

Once the network forks, it will take time for the Electrum server network to split into servers of the Segwit fork, and
servers of the Bitcoin SV fork.  You should ensure you are connected to a Bitcoin SV Electrum server in order to
send transactions successfully.  Some servers that will be serving the Bitcoin SV fork are:

    electrum-abc.cascharia.com via SSL port 50002
    electrum-abc.criptolayer.net via SSL port 50012
    180.235.49.196, 35.185.209.69 and 35.197.25.235  TCP port 50001 and SSL port 50002

There will likely be other servers available; please check their banners in the Console tab (View|Show Console).


Hardware Wallets
----------------

Since Bitcoin SV enforces a new signing scheme, hardware wallet vendors need to supply new firmware and/or libraries
for the hardware to be able to sign transactions correctly.  Currently such libraries and firmware do not exist, so you
cannot use your hardware wallets with Electrum SV.

To use Electrum SV with your hardware-wallet coins you will need to restore your wallet as a software Electrum SV
BIP44 wallet from its seed so that Electrum SV can sign the transactions itself.  Since this exposes your coins to
risk you may want to wait for the 3rd party software to be developed and integrated instead.


Two-factor Authentication (2FA) Wallets
---------------------------------------

For the same reason as Hardware Wallets above, 2FA wallets need Trustedcoin to perform new Bitcoin SV-style
signatures for their transactions to be valid on the Bitcoin SV fork.  If third party support appears we will attempt
to integrate it.


Multisig
--------

For a multisig transaction to be valid on the Bitcoin SV fork, each signature must be done thew new Bitcoin SV way,
so each signature must be performed with Electrum SV or other Bitcoin SV-compatible software.

Unfortunately Electrum SV does not currently work with multisig wallets as Electrum's serialization format for
transferring transactions between cosigners is incomplete.  We intend to fix this.


Miscellaneous
-------------

Electrum 2.9 has new code to deal with chain forks which may have outstanding (pre-existing in Electrum)
bugs and problems.  Since this package forks that code it will contain those issues.

If you have problems syncing to the correct chain fork (take a look at the Overview Tab in the "Network" window (in
Menu "Tools") to see information about chain forks your client knows about), you can try to remove everything except
"wallets" directory and "config" file from your Electrum SV directory.

Electrum 3.0 -- This is now on Python 3.  Make sure all python commands are on python 3 and any needed
modules/libraries are imported into pyhon 3.  The build is deterministic for windows (everyone should get
the same binary because of customization to Pyinstaller that was done by Electrum team, as well as separate
repos for locales and icons).  The fee upgrades may not be visible for existing wallet owners
unless you reset the max fee in preferences or remove the config file.  There is no minimum fee on the client
side.  Be careful sending too low of a fee (lower than 1 satoshi/byte) or your transaction may get stuck,
and there is no warning message.

Electrum SV
-----------

# Release 1.1.0 (TBD)
  * Update checking.

# Release 1.1.0 (TBD)
  * Splitting support.

Electron Cash (preceding Electrum SV release)
---------------------------------------------

# Release 2.9.2
  * force headers download if headers file is corrupted
  * add websocket to windows builds
  * fix initial headers download
  * validate contacts on import
  * command-line option for locktime

# Release 2.9.3
  * Improved code to force wallet to stay on Bitcoin SV chain
  * Removed dynamic fees.  Fees are now simple Sat/Byte model
  * Add Coin_Type 145 for Bitcoin SV for bip39 seed imports
  * Use bitcoincash URI prefix for receiving and QR codes

# Release 2.9.4
  * Implement new Difficulty Adjustment Algorithm for Nov 13, 2017 Hard Fork
  * Change ticker symobl from BCC to BCH
  * Implement changes to allow simultaneous installation with Electrum
  * Upgrade to PyQt5
  * Various fixes for hardware wallets
  * Remove 2FA for new wallet creation
  * Remove feature to copy electrum wallet files

# Release 3.0
  * upgrade to Python3 and PyQt5
  * Build is done deterministically for windows
  * improve fee policy

# Release 3.1

  * Multiple address format support.  Electrum SV supports input of cashaddr
    addresses, legacy bitcoin addresses, and BitPay addresses anywhere
    where a legacy address used to be accepted.
  * Only display of cashaddr and legacy addresses is supported.  You can
    toggle the display format in the Appearance tab of the Preferences
    dialog window; alternatively you can press the converter icon
    button in the toolbar at the bottom of the main window.  Hardware
    wallets will probably show the legacy format until their firmware is
    updated.
  * An address converter tab can convert between all 3 address formats.
    To see it, choose to show it from the View menu.
  * At some stage support for BitPay address format will be removed, and
    at some later stage support for display of legacy addresses will also
    be removed.
  * The fee slider has been adjusted to range from 1 to 10 sats/byte.
  * Many bug fixes and improvements


# Release 3.1.1
  * Requires Python 3.6 or greater
  * Fixes JSONPRC security threat
  * Fixes included for ledger for windows


# Release 3.1.2
  * Additional security improvements related to JSONRPC

# Release 3.1.3
  * Android only release for security fixes

# Release 3.1.5
  * Various bug fixes

# Release 3.1.6

  * Enable Bip70 payment requests for merchants like BitPay.
  * Prohibit unconfirmed inputs on payment request (invoice) payments
    because Bitpay will reject them anyway.
  * Remove Bitpay address format from address converter as Bitpay is
    now fully on CashAddr.
  * Introduce 'cash' moniker for micro bitcoin

# Release 3.2

* restore disabled script opcodes (May 2018 HF)
* network protocol version bump to 1.2
* ledger: cashaddr support and various fixes
* more block explorers
* other bugfixes and improvements

# Release 3.3

* Add external plugins feature.  Please see https://github.com/Electrum-SV/Electrum-SV/blob/master/plugins/README.rst  and pay special attention to the risks involved with running external plugins.
* Various bugfixes and improvements

# Release 3.3.1

* Add OP_RETURN feature.
* Upgraded fee interface allowing lower fees with a custom fee rate.

# Release 3.3.2

* UTXO (coin) level freezing (accessible from Coins tab)
* Bugfix to network code reared its head when user switches forks in unlikely circumstances
* Checkpoint code (ElectrumX 1.4) protocol upgrade for faster blockchain header downloads
* Updated servers list
* BitPay support now works flawlessly
* Fork icon indicates chain splits to allow user to select an alternate chain
* UI glitches fixed
* Various bug fixes (address exceptions)
* Translations on Windows working again
* More Spanish language translations!
* Mac: bitcoincash: URLs working
* Mac: Bitpay URLs working
